<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-autowire="byName">

    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true" file-encoding="utf-8"/>
    <context:component-scan base-package="com.party.game" use-default-filters="true">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- hibernate validator校验器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="fileEncodings" value="utf-8"/>
        <property name="cacheSeconds" value="120"/>
    </bean>

    <mvc:annotation-driven conversion-service="conversionService" validator="validator">
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter"/>

            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter"/>

            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=utf-8</value>
                        <value>text/html;charset=utf-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>

        <mvc:argument-resolvers>
            <bean class="com.party.game.common.spring.PagingParams"/>
        </mvc:argument-resolvers>
    </mvc:annotation-driven>

    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
    <mvc:default-servlet-handler />


    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/user/login/login.do"/>
            <mvc:exclude-mapping path="/user/login/home.do"/>
            <mvc:exclude-mapping path="/user/login/loginView.do"/>
            <mvc:exclude-mapping path="/logistics/logistics/logisticsNotify.do"/>
            <mvc:exclude-mapping path="/notify/cl/acceptNotify.do"/>
            <ref bean="loginInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean"/>


    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/page/"></property> <!-- 视图文件的前缀 -->
        <property name="suffix" value=".jsp"></property> <!-- 视图文件的后缀名 -->
    </bean>

    <!-- 支持文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 请求编码格式 -->
        <property name="defaultEncoding" value="utf-8"></property>
        <!-- 上传文件大小(单位:字节) -->
        <property name="maxUploadSize" value="50000000"></property>
        <!-- 缓冲区大小(单位:KB) -->
        <property name="maxInMemorySize" value="1024"></property>
    </bean>

    <aop:config proxy-target-class="true" />

    <!-- shiro注解拦截 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.apache.shiro.authz.UnauthorizedException">error/unauthorized</prop>
            </props>
        </property>
    </bean>
</beans>
